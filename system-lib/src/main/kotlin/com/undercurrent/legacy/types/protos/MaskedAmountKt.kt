//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: external.proto

package com.undercurrent.legacy.types.protos;

@kotlin.jvm.JvmName("-initializemaskedAmount")
inline fun maskedAmount(block: MaskedAmountKt.Dsl.() -> kotlin.Unit): com.undercurrent.legacy.types.protos.MobileCoinAPI.MaskedAmount =
  MaskedAmountKt.Dsl._create(com.undercurrent.legacy.types.protos.MobileCoinAPI.MaskedAmount.newBuilder())
    .apply { block() }._build()
object MaskedAmountKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.undercurrent.legacy.types.protos.MobileCoinAPI.MaskedAmount.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.undercurrent.legacy.types.protos.MobileCoinAPI.MaskedAmount.Builder): Dsl =
        Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.undercurrent.legacy.types.protos.MobileCoinAPI.MaskedAmount = _builder.build()

    /**
     * <pre>
     * A Pedersen commitment `v*G + s*H`
     * </pre>
     *
     * <code>.external.CompressedRistretto commitment = 1;</code>
     */
    var commitment: com.undercurrent.legacy.types.protos.MobileCoinAPI.CompressedRistretto
      @JvmName("getCommitment")
      get() = _builder.getCommitment()
      @JvmName("setCommitment")
      set(value) {
        _builder.setCommitment(value)
      }
    /**
     * <pre>
     * A Pedersen commitment `v*G + s*H`
     * </pre>
     *
     * <code>.external.CompressedRistretto commitment = 1;</code>
     */
    fun clearCommitment() {
      _builder.clearCommitment()
    }
    /**
     * <pre>
     * A Pedersen commitment `v*G + s*H`
     * </pre>
     *
     * <code>.external.CompressedRistretto commitment = 1;</code>
     * @return Whether the commitment field is set.
     */
    fun hasCommitment(): kotlin.Boolean {
      return _builder.hasCommitment()
    }

    /**
     * <pre>
     * `masked_value = value XOR_8 Blake2B("value_mask" || shared_secret)`
     * </pre>
     *
     * <code>fixed64 masked_value = 2;</code>
     */
    var maskedValue: kotlin.Long
      @JvmName("getMaskedValue")
      get() = _builder.getMaskedValue()
      @JvmName("setMaskedValue")
      set(value) {
        _builder.setMaskedValue(value)
      }
    /**
     * <pre>
     * `masked_value = value XOR_8 Blake2B("value_mask" || shared_secret)`
     * </pre>
     *
     * <code>fixed64 masked_value = 2;</code>
     */
    fun clearMaskedValue() {
      _builder.clearMaskedValue()
    }

    /**
     * <pre>
     * `masked_token_id = token_id XOR_8 Blake2B("token_id_mask" || shared_secret)`
     * </pre>
     *
     * <code>bytes masked_token_id = 3;</code>
     */
    var maskedTokenId: com.google.protobuf.ByteString
      @JvmName("getMaskedTokenId")
      get() = _builder.getMaskedTokenId()
      @JvmName("setMaskedTokenId")
      set(value) {
        _builder.setMaskedTokenId(value)
      }
    /**
     * <pre>
     * `masked_token_id = token_id XOR_8 Blake2B("token_id_mask" || shared_secret)`
     * </pre>
     *
     * <code>bytes masked_token_id = 3;</code>
     */
    fun clearMaskedTokenId() {
      _builder.clearMaskedTokenId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.undercurrent.legacy.types.protos.MobileCoinAPI.MaskedAmount.copy(block: MaskedAmountKt.Dsl.() -> kotlin.Unit): com.undercurrent.legacy.types.protos.MobileCoinAPI.MaskedAmount =
   MaskedAmountKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val com.undercurrent.legacy.types.protos.MobileCoinAPI.MaskedAmountOrBuilder.commitmentOrNull: com.undercurrent.legacy.types.protos.MobileCoinAPI.CompressedRistretto?
  get() = if (hasCommitment()) getCommitment() else null

